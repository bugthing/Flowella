[% META menu_hilight = 'Charts' %]

[% BLOCK inline_css %]

#chartvisual {
    position:relative;
    overflow: auto;
    width: 100%;
    height: 500px;
    min-height: 500px;
}

.sectionlineedit {
  border:1px solid #346789;
  background-color: #FFFFFF;
  margin-bottom: 10px;
  display: block;
  padding: 10px;
}
.sectionlineedit > a {
  float: right;
  color: red;
}

/*  make form inputs fit */

select {
    width: 100%;
}
input {
    width: 100%;
}
textarea {
    width: 100%;
    height: 90px;
}

/*  jsPlumb related */

.sectionnode {
    border:1px solid #346789;
    z-index:20;
    position:absolute;
    padding: 8px;
    font-size: 15px;
}
._jsPlumb_connector {
    z-index:4;
}
._jsPlumb_endpoint {
    z-index:5;
}
._jsPlumb_overlay {
    z-index:6;
}
.edge-label {
    background-color:white; 
    padding: 1px;
    font:12px sans-serif; 
    color: #346789;
    z-index:21;
    border:1px dotted gray;
    opacity:0.8;
    filter:alpha(opacity=80);
}

/* newSectionDialog */

#onwardsectionmodal {
    display:none;
}

[% END %]

    <div class="row-fluid">
        <div class="well" id="mainarea">
<!-- Chart area --> 
            <!-- tempory refresh link --> 
            <div><a href='javascript: build_chart_plumbing();'>refresh</a> </div>
        </div>
    </div><!--/row-->

[% BLOCK inline_js %]

function read_chart_id() {

    // read QueryString..
    var urlParams = {};
    (function () {
        var e,
            a = /\+/g,  // Regex for replacing addition symbol with a space
            r = /([^&=]+)=?([^&]*)/g,
            d = function (s) { return decodeURIComponent(s.replace(a, " ")); },
            q = window.location.search.substring(1);
    
        while (e = r.exec(q))
           urlParams[d(e[1])] = d(e[2]);
    })();

    // get chart if from query string.
    var chart_id = 0;
    if( urlParams['chart'] ) chart_id = urlParams['chart'];

    return chart_id
}

// load flowella when jquery says we are ready
var f;
var chart_id = read_chart_id();

$(document).ready( function() { 
    // load EmberJS based stuff..
    FApp.chartController.set('chart', FApp.ChartModel.create({ 'id': chart_id }) );
} );

[% END %]

[% BLOCK inline_head %]
<!-- EmberJS - view handlebar templates -->

<script type="text/x-handlebars" data-template-name="list-tools">
    <div id="toolsvisual">
        {{#each tools}}
            {{#view FApp.ToolButtonView toolBinding="this" }}
                {{tool.name}}
            {{/view}}   
        {{/each}}   
    </div>
</script>

<script type="text/x-handlebars" data-template-name="show-chart">
    <h3>Chart: {{chart.title}} </h3>
    {{#each FApp.chartSectionsController}}
        {{#view FApp.ChartSectionView sectionBinding="this"}}
            <div class="sectionnode btn" {{bindAttr id="secId"}} {{bindAttr style="divStyle"}} > 
                {{name}}
            </div>
        {{/view}}
    {{/each}}   
    {{#view FApp.ChartEdgesView }}
        {{ label }}
    {{/view}}   
    <div class="contextMenu" id="sectionMenu" style='display:none;'>
      <ul>
        <li id="edit">          Edit           </li>
        <li id="delete">        Delete         </li>
        <li id="onwardsection"> Onward Section </li>
        <li id="newsection">    New Section    </li>
      </ul>
    </div>
    <div id="sectioneditmodalcontainer"></div>
</script>

<script type="text/x-handlebars" data-template-name="show-chartsectiononward">
    <div class="modal" id="onwardsectionmodal">
        <div class="modal-header">
            <a class="close" data-dismiss="modal">x</a>
            <h3>OnwardSection</h3>
        </div>
        <div class="modal-body">
            <form class='form-stacked' id='onwardsection_form'>
                <input type="hidden" name="outward_section_id"/>
                <fieldset>
                    <label for="onwardsection_text">Button Label</label>
                    <input type="text"name="button_label" />
                </fieldset>
            </form>
        </div>
        <div class="modal-footer">
            <a href="#" class="btnbtn-primary" {{ action "clickSave" }}>
                Save changes
            </a>
        </div>
    </div>
</script>

<script type="text/x-handlebars" data-template-name="show-sectioneditmodal">
    <div class="modal" id="sectioneditmodal">
        <div class="modal-header">
            <a class="close" {{ action "destroyElement" }}>x</a>
            <h3>Section Editor</h3>
        </div>
        <div class="modal-body">
          <div id='newform'></div>
        </div>
        <div class="modal-footer">

            <div id="toolsvisual">
                {{view FApp.ToolsView}}   
            </div>

        </div>
    </div>
</script>

<script type="text/x-handlebars" data-template-name="show-sectionedit">
    <div>
        <div>Section: {{section.section.name}}</div>
        <div id="section_editarea">
        </div>
        <div>
            <a href='#' class='btn' {{action "saveSectionLines"}}> SAVE </a>
        </div>
    </div>
</script>

<script type="text/x-handlebars" data-template-name="show-editsectionline">
    <div {{bindAttr id="editId" }} {{bindAttr class="editClass"}}>
        {{ section_line_edit editSrc }}
    </div>
</script>

[% END %]
